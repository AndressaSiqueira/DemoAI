[bandit]
# Bandit configuration for Python security scanning

# Exclude test files and directories
exclude_dirs = tests,test,**/tests/**,**/test/**,.git,.pytest_cache,__pycache__,venv,env,.venv

# Include specific tests (all enabled by default)
tests = B101,B102,B103,B104,B105,B106,B107,B108,B110,B112,B201,B301,B302,B303,B304,B305,B306,B307,B308,B309,B310,B311,B312,B313,B314,B315,B316,B317,B318,B319,B320,B321,B322,B323,B324,B325,B401,B402,B403,B404,B405,B406,B407,B408,B409,B410,B411,B412,B413,B501,B502,B503,B504,B505,B506,B507,B601,B602,B603,B604,B605,B606,B607,B608,B609,B610,B611,B701,B702,B703

# Skip specific test IDs (if needed)
skips = 

# Report format
format = json

# Confidence levels to report
confidence = low

# Severity levels to report  
severity = low

# Maximum number of issues to report (0 for unlimited)
max_issues = 0

# Include line numbers in reports
include_line_numbers = true

# Additional message template
msg_template = "{abspath}:{line}: [{test_id}({severity})] {msg}"

# Target specific files or directories
targets = .

# Recursive search
recursive = true

# Aggregate results
aggregate = json

# Check for hardcoded passwords and secrets
[bandit.hardcoded_password_string]
word_list = password,pass,passwd,pwd,secret,token,key,api_key,private_key,secret_key

[bandit.hardcoded_password_default]
word_list = admin,root,password,123456,secret,default

# Flask-specific configurations
[bandit.flask_debug_true]
enabled = true

# SQL injection patterns
[bandit.hardcoded_sql_expressions]
enabled = true

# Shell injection patterns
[bandit.subprocess_popen_with_shell_equals_true]
enabled = true

# SSL/TLS configurations
[bandit.request_with_no_cert_validation]
enabled = true

# Cryptographic configurations
[bandit.hardcoded_bind_all_interfaces]
enabled = true